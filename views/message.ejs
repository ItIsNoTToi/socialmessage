<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Messenger</title>
    <link rel="stylesheet" href="/stylesheets/message.css">
</head>
<body>
    <div id="content">
        <header>
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/message">Messages</a></li>
                <li><a href="/community/page">Community</a></li>
                <li><a href="/friend/Orderfriend">Friend</a></li>
            </ul>
        </header>
        <div id="section">
            <section id="group-chat">
                <% if (Array.isArray(data) && data.length > 0) { %>
                    <% data.forEach(chat => { %>
                        <div class="chat-group">
                            <% if (chat.Chat && chat.Chat._id) { %>
                                <button onclick="chat('<%= chat.Chat._id %>')" class="chat-button"><%= chat.Chat.name %></button>
                            <% } else { %>
                                <span style="display: none;">No chat available</span>
                            <% } %>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="no-chat">Không có nhóm chat nào!</div>
                <% } %>
            </section>
            <section id="form-chat">
                <div id="message-chat" class="message-chat"></div>
                <div id="btn" class="message-input-container">
                    <!-- Input và nút gửi sẽ được thêm ở đây động -->
                </div>
            </section>            
        </div>
    </div>
    <footer></footer>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io(); // Kết nối với server thông qua Socket.IO
        let currentChatId = null; // Theo dõi chat hiện tại
    
        // Hàm tham gia nhóm chat và tải tin nhắn cũ qua WebSocket
        async function chat(chatId) {
            currentChatId = chatId; // Lưu ID nhóm chat hiện tại
            socket.emit('joinChat', chatId); // Tham gia nhóm chat qua WebSocket
    
            const btn = document.getElementById('btn');
            btn.innerHTML = '';  // Xóa các phần tử cũ (nếu có)
            btn.innerHTML += '<input id="message" type="text" placeholder="Nhập tin nhắn" class="message-input">';
            btn.innerHTML += '<button type="submit" onclick="sendmessage(\'' + currentChatId + '\')" class="send-button">Send</button>';
            socket.once('oldMessages', (messages) => { // dùng .once để đảm bảo chỉ lắng nghe 1 lần
                const messageChat = document.getElementById('message-chat');
                messageChat.innerHTML = ''; // Xóa các tin nhắn cũ

                if (Array.isArray(messages) && messages.length > 0) {
                    messages.forEach(message => {
                        appendMessage(message.content); // Thêm từng tin nhắn vào giao diện
                    });
                } else {
                    messageChat.innerHTML = '<p style="display: none;">Không có tin nhắn nào trong nhóm này.</p>';
                }
            });
        }
    
        // Hàm gửi tin nhắn qua WebSocket
        async function sendmessage(chatId) {
            const content = document.getElementById('message').value; // Lấy nội dung tin nhắn
            const repliedMessageId = null;
            const mediaIds = [];
            if (content.length > 0 && content.length <= 500) {
                // Gửi tin nhắn qua WebSocket
                fetch('/message/sendmessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ content, chatId, repliedMessageId, mediaIds }),
                })
                .then(response => response.json())
                .then(data => {
                    appendMessage(data.data.content);
                    socket.emit('newMessage', data.data); // Gửi tin nhắn mới đến các client khác
                    document.getElementById('message').value = '';
                })
                .catch(error => console.error(error));
            } else {
                console.error('Tin nhắn không hợp lệ');
            }
        }
    
        // Hàm thêm tin nhắn vào giao diện
        function appendMessage(content) {
            const messageChat = document.getElementById('message-chat');
            const messageElement = document.createElement('p');
            messageElement.textContent = content;
            messageChat.appendChild(messageElement); // Thêm tin nhắn vào danh sách
            messageChat.scrollTop = messageChat.scrollHeight; // Cuộn xuống cuối
        }
    
        socket.on('Messages', async (message) => {
            if (message.chat === currentChatId) {
                appendMessage(message.content); // Chỉ thêm tin nhắn nếu đúng nhóm chat
            }
        });
    </script>
</body>
</html>
